
=======================
Token : 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
=======================
How to run the container with custom port 

docker run -d -p <customer port>: <image port> image name:tag 
###-p is used for customer port number purpose.

docker run -d -P imagename:tag
###-P is used for docker will be provide the dynamic port for the container.


docker image inpsect <imagename>:tag

=======================================================================================

COPY src(path-on-vm) destination(path(folder)-on-cont)

FROM ubuntu:18.04

COPY <>.gz /opt
RUN tar -xvzf /opt/jdk -C /opt
RUN mv /opt/jdk /opt/java
ENV JAVA_HOME /opt/java
COPY apache.tr. /opt
RUN tar -xvzf apac -C /opt
RUN mv /opt/apac /opt/tomcat
COPY myapp.war /opt/tomcat/webapps/

CMD ["/opt/tomcat/bin/catalin.sh","run"]

##CMD is used to tell docker how to start the tomcat process when we run a cont from image

EXPOSE 8080

## EXPOSE is used to tell docker what is the port of the application /software we installed




======================

how to push image into the docker hub?

Step 1: Enter into the login 
CMD : docker login docker.io
username
password
Step2 : 

docker build--file <docker file path> --tag <registor path>(Exampole docker.io/learndevops/myapp:v2) //home/ubuntu

Step 3: 
docker push <registery path image>

Ex :  docker push learndevops/myapp:v2

========================

DOCKER VOLUME

Helps you to attach an external storage to container
Helps to persist the data generated by container


docker volume ls
docker volume create  <name>
docker volume inspect <file name>

How to attach the volume into the container?



docker run -d -P --mount type=volume,src=<name of the volme>,target=<container logs path> <image ID>

How to create the customized volume?
Step 1: create the directory particular location.
mkdir appdata
Step-2: 

docker run -d -P --mount type=bind,src=<name of the volme>,target=<container logs path> <image ID>
Note : If using the customized volume need give type is bind by default type will be volume

how to remove the volume

docker volume rm <volume name>
docker volume prune


docker networking

Bu default docker will cretae the docker0 swtich.This switch will provide the ip for the containers.There will be connection in between.

=================

docker network ls

docker run -d --name <container name> --network <network name> <image id>


====================================================== 

How to create multiple container from the given image?
Ans: we need to automate
docker compose is a tool that helps to run multiple container from the given image with a single command.Rather than creating cont from the command line commands write script.

We will also write a script called docker compose file to create the multiple containers. We will use the YML to write the docker compose file.
DOCKER compose file can be executed with docker compose tool only.

service : service is a group of containers from a given single image only.

    
  

How to create the compose file.

vi mycomposefile.yml

volumes:
 appconf: ## create the volume
services:
 mywebsite:
  image: httpd:latest
  ports: 
   - 80 #container port number.
  volmes:
   - appconf: /var/www/html  ### source path(path of vm): target path(path of container) ##appconf is docker created volume   

How to run the docker compose file.
docker compose -f <filename> up --scale servicename=<no.of container> -d 
-d ===> means detach

How to run the docker compose file and required 3 containers
docker compose -f <filename> up --scale servicename=<no.of container> -d 
docker compose -f mycomposefile.yml up --scale servicename=3 -d
-d === means detach


How to down the containers with docker compose
docker compose -f <filename> down
========================================


Container Orachestration Tool: 
      --- helps to deploy the containers across the multiple server/vm/cluster
      --- Helps in maninging the dynamic nature of the cont
      --- Provides various benefits
               ---> Requesting routing into multiple cont for H.V
               ---> provides desired state /auto healring
              ----> scale up / scale down the multiple server.


multiple container Orachestration tools:
--docker swarm --- is from the docker org & it free --2%
-- Kubernetes --  opensource / free ---98%

In a container Orachestration cluster we have at least 2 vms:
1.VM/server/ec2 -- we will use as the manager /master vm 



Commands : 
docker info ===> to given docker information.

Docker swarm lab setup:

Required 3--vm1--master node ,2-worker node

which ever the vm you run "docker swarm init" that vm will start the acting as manger vm(Master Node).
After enter the docker swarm init command will give token key value and copy and paste key in the client nodes.

How to re-generate the token key
CMD : docker swarm join-token worker

docker ls ===> to list out the docker nodes.

Service : Service is a group of containers from a given single image only.

How to run the container in the master node and client nodes at a time.

Step-1: We need to install docker package in all server like manager node and worker nodes as well.
Step-2: Login to the master node server.
docker service create --name <service name> --replicas <no.of replicas> -p 2345:80 <image name/ image ID>

Step 3: 
docker service ls ===> to list out the service.
docker service ps <service Name>
docker node ls
docker node inpect <host name> ==> to use the command in the master node.
docker service logs <service name> ==> to use the command in the master node to get the service logs.
Note : How get the port for any image 
docekr image inspect <image name/image id>

docker service scale <service name>=no.servers


docker network ls ===> for docker swarm it will create the overlay network.
docker network inspect <network name> 
Ex : docker network inspect ingress

stack: group of services related to single product / app.


docker service rm <service name>
==========================
kubernetes :

kubeadm init ===> 
--->to initialize the 
kubernets
----> will start /initialize a master process called API server on master vm.

kubeadm join===
will start /initalize agent process called kubelet on worker vms.
 
master vm to worker vm communcation
API server process on msater vm will talk to kubelet process on worker vm.


Commands : below mentioned command for kubernetes

kubeadm command is only for initialize and join to thee woker nodes.
kubeadm init
kubeadm join token mip:port

kubectl get nodes
kubectl run
kubectl create
kubectl logs
kubectl exec
kubectl delete
kubectl describe

Lab setup for the kubernetes cluster :
3-VM's
1-Master Node
2's- Worker Nodes


kebernetes pods :

How to run the pod
kubectl run <podname>--image=imagename
kubectl run webpod --image=httpd:latest
kubectl get pods -o wide ===> listout the pods

CMD : kubectl describe pod <podname>
CMD : kubectl logs <pod name>
CMD : kubectl exec -it <podname> -- /bin/bash

CMD : kubectl delete pod <pod name>

CMD :  kubectl get pods -o wide --all-namespaces 
===================
Resouce :  to list out the resources
kubectl api-resources

How to write the yaml file in kubernets

kind: Pod # 
apiVersion: v1
metadata: 
  name: nameofthepod
  namespace: default
  labels: #are mandatory # like tags #helps to group a set resources / pods
